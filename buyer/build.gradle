plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'au.com.dius.pact' version '3.5.23'
}

group = 'com.tw.geeknight'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testCompile "org.springframework.boot:spring-boot-starter-test"
	testImplementation 'io.projectreactor:reactor-test'
	implementation 'junit:junit:4.12'
	testCompile("au.com.dius:pact-jvm-consumer-junit_2.12:3.6.1")
}

test {
	useJUnitPlatform()
}

sourceSets {
	consumerPactsGenerate {
		java.srcDir file('src/consumer-contract-test/java')
		resources.srcDir file('src/consumer-contract-test/resources')
		resources.srcDir file('src/JSONRequestResponseFiles')
		compileClasspath += sourceSets.main.output + configurations.testRuntime
		runtimeClasspath += output + compileClasspath
	}
}

configurations {
	contractTestImplementation.extendsFrom implementation
}

task generatePacts(type: Test) {
	description = 'Runs contract tests.'
	group = 'verification'
	testClassesDirs = sourceSets.consumerPactsGenerate.output.classesDirs
	classpath = sourceSets.consumerPactsGenerate.runtimeClasspath
	testLogging {
		exceptionFormat = 'full'
	}
	systemProperties['pact.rootDir'] = "$buildDir/pacts"

	exclude '**/provider/*'
}

pact {
	publish {
		pactDirectory = "$buildDir/pacts"
		pactBrokerUrl = 'http://localhost:9292/'
	}
}